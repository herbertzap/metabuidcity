type BatchId = nat;
type ChunkId = nat;
type Key = text;
type Time = int;

type CreateAssetArguments = record {
  key : Key;
  content_type : text;
  max_age : opt nat64;
  headers : opt vec record { text; text };
  enable_aliasing : opt bool;
  allow_raw_access : opt bool;
};

type SetAssetContentArguments = record {
  key : Key;
  content_encoding : text;
  chunk_ids : vec ChunkId;
  sha256 : opt blob;
};

type UnsetAssetContentArguments = record {
  key : Key;
  content_encoding : text;
};

type DeleteAssetArguments = record {
  key : Key;
};

type ClearArguments = record {};

service : {
  create_asset : (CreateAssetArguments) -> ();
  set_asset_content : (SetAssetContentArguments) -> ();
  unset_asset_content : (UnsetAssetContentArguments) -> ();
  delete_asset : (DeleteAssetArguments) -> ();
  clear : (ClearArguments) -> ();
}
